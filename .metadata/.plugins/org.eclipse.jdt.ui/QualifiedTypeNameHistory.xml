<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.kafka.KafkaProperties.Retry.Topic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaAdmin.NewTopics"/>
    <fullyQualifiedTypeName name="com.apachekafka.producer.service.MessageProducerService"/>
    <fullyQualifiedTypeName name="com.apachekafka.producer.service.MessageConsumerService"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.protocol.Message"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.support.MessageBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.KafkaHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.apachekafka.model.User"/>
    <fullyQualifiedTypeName name="com.apachekafka.producer.service.KafkaJsonMessageProducer"/>
    <fullyQualifiedTypeName name="com.apachekafka.producer.service.KafkaJsonMessageProducerService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.Message"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="java.net.URI"/>
    <fullyQualifiedTypeName name="com.launchdarkly.eventsource.EventSource"/>
    <fullyQualifiedTypeName name="com.launchdarkly.eventsource.EventSource.Builder"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="com.launchdarkly.eventsource.MessageEvent"/>
    <fullyQualifiedTypeName name="com.launchdarkly.eventsource.EventHandler"/>
    <fullyQualifiedTypeName name="com.kafkaproducer.controller.KafkaProducerController"/>
    <fullyQualifiedTypeName name="com.kafkaproducer.service.MessageDrivenService"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.kafkaconsumer.service.ConsumeMesageService"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
</qualifiedTypeNameHistroy>
